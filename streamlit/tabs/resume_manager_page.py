import os

import requests
from requests.exceptions import RequestException, Timeout
from src import models
from src.components import list_pdfs, preview_pdf

import streamlit as st


HTTP_OK = 200


def render() -> None:
    cities = models.CITIES
    jobs = models.SPECIALIZATIONS

    cv_generation_host = os.getenv("CV_GENERATOR_HOST")
    cv_generation_port = os.getenv("CV_GENERATOR_PORT")
    cv_generation_url = f"http://{cv_generation_host}:{cv_generation_port}"

    tab1, tab2, tab3 = st.tabs(["–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—é–º–µ", "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–∑—é–º–µ", "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—é–º–µ"])

    with tab1:
        st.markdown("### –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ")
        pdf_files = list_pdfs("data/resumes_pdf")

        if pdf_files:
            selected_pdf = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—é–º–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:", pdf_files)
            if selected_pdf:
                preview_pdf(selected_pdf, "data/resumes_pdf")
        else:
            st.info("–í –ø–∞–ø–∫–µ –Ω–µ—Ç PDF-—Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—é–º–µ.")

    with tab2:
        st.markdown("### –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–∑—é–º–µ")

        name = st.text_input("–ò–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞", st.session_state.get("name", ""))

        desired_job = st.selectbox(
            "–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
            jobs,
            index=jobs.index(st.session_state.get("loc", jobs[0])),
        )

        years_of_experience = st.slider("–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (–ª–µ—Ç)", 0, 20, st.session_state.get("exp", 3))

        location = st.selectbox(
            "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
            cities,
            index=cities.index(st.session_state.get("loc", cities[0])),
        )

        if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—é–º–µ"):
            candidate = models.CandidateInput(
                name=name,
                desired_job=desired_job,
                years_of_experience=years_of_experience,
                location=location,
            )

            with st.spinner(f"–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∑—é–º–µ –¥–ª—è {candidate.name}..."):
                try:
                    response = requests.post(url=cv_generation_url, json=candidate.model_dump(), timeout=30)
                    if response.status_code == HTTP_OK:
                        st.success(response.json().get("message"))
                        st.write("–û–∂–∏–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF...")

                        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—é–º–µ"):
                            pdf_files = list_pdfs("data/resumes_pdf")
                            if pdf_files:
                                latest_pdf = sorted(pdf_files)[-1]
                                st.success("–†–µ–∑—é–º–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                                preview_pdf(latest_pdf, "data/resumes_pdf")
                            else:
                                st.warning("–ù–æ–≤—ã—Ö PDF —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    else:
                        st.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.text}")
                except Timeout:
                    st.error("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.")
                except ConnectionError:
                    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API.")
                except RequestException as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e!s}")
    with tab3:
        st.markdown("### –í–Ω–µ—Å–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ –≤ –±–∞–∑—É")
